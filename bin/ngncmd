#!/usr/bin/env ruby

require 'rubygems'
require 'thor'
require File.dirname(__FILE__) + '/../lib/routengn'

class NGNCommand < Thor
  map "--configure" => :configure,
      "--upload-regions" => :region_upload

  desc "configure", "Set up your RouteNGN API config (.ngnconf)"
  def configure
    user = ENV['USER'] ? ENV['USER'] : `who am i`
    say "Configuring ngncmd for #{user}...", :yellow
    site = ask "RouteNGN Site (ex. http://routengn.net):", :magenta
    key = ask "API Key:", :magenta
    secret = ask "API Secret:", :magenta
    say "Trying to connect... ", :yellow
    begin
      if RouteNGN.connect! site, key, secret
        say "Success", :green
        say "Writing config file... ", :yellow
        RouteNGN.write_config
        return say("Success", :green)
      end
    rescue Exception
      # noop
    end
    say "Failed", :red
    say "\nPlease check your site and credentials and try again.", :red
    exit 1
  end

  desc "upload regions", "Upload a regions file"
  def region_upload
    file = ask "Path to file:", :magenta
    unless File.readable? file
      say "Error: file is not readable"
      exit 1
    end
    connect
    say "Uploading file... "
    Region.upload(file)
    say "Success"
  end


  no_tasks do
    def connect
      say "Establishing connection... "
      RouteNGN.connect!
      say "Success"
    rescue Exception
      say "Failed"
      exit 1
    end
  end
end


NGNCommand.start

